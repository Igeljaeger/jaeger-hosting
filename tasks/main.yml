---
#Nginx
- name: Copy nginx templates
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
    owner: "root"
    group: "root"
  with_items:
    - { src: "default.j2", dest: "{{ nginx-sites }}/default.nginx"}
    - { src: "insta.j2", dest: "{{ nginx-sites }}/insta.nginx"}
    - { src: "matrix.j2", dest: "{{ nginx-sites }}/matrix.nginx"}
    - { src: "navidrome.j2", dest: "{{ nginx-sites }}/navidrome.nginx"}
    - { src: "reden.j2", dest: "{{ nginx-sites }}/reden.nginx"}
    - { src: "searx.j2", dest: "{{ nginx-sites }}/searx.nginx"}
    - { src: "stickers.j2", dest: "{{ nginx-sites }}/stickers.nginx"}

#Static Websites
#homepage
- name: Create homepage folder
  file:
    path: "{{ homepage-path }}"
    state: directory

- name: Clone homepage repository
  git:
    repo: https://github.com/Igeljaeger/igel.jaeger.website.git
    dest: "{{ homepage-path }}"
    clone: yes
    update: yes

- name: Recursively change ownership of a homepage directory
  ansible.builtin.file:
    path: "{{ homepage-path }}"
    state: directory
    recurse: yes
    owner: "{{ user }}"
    group: "{{ group }}"

#Stickers
- name: Create Stickers Data Folder
  file:
    path: "{{ stickers-path }}"
    state: directory

- name: Clone Stickerpicker repository
  git:
    repo: https://github.com/Igeljaeger/stickerpicker.git
    dest: "{{ stickers-path }}"
    clone: yes
    update: yes

- name: Recursively change ownership of a Stickers directory
  ansible.builtin.file:
    path: "{{ stickers-path }}"
    state: directory
    recurse: yes
    owner: "{{ user }}"
    group: "{{ group }}"

#Docker
- name: Create homepage folder
  file:
    path: "{{ compose_folder }}"
    state: directory

- name: Create bibliogram folder
  file:
    path: "{{ bibliogram-path }}"
    state: directory

- name: Clone the bibliogram repository
  git:
    repo: https://git.sr.ht/~cadence/bibliogram
    dest: "{{ bibliogram-path }}"
    clone: yes
    update: yes

- name: Install the package "docker.io"
  apt:
    name: docker.io
    state: present

- name: Install the package "docker-compose"
  apt:
    name: docker-compose
    state: present

- name: Enable docker service
  ansible.builtin.service:
    name: docker
    enabled: yes

- name: Start docker service, if not started
  ansible.builtin.service:
    name: docker
    state: started

- name: Create Navidrome folders
  file:
    path: "{{ navidrome-path }}/music"
    state: directory

- name: Copy templates
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ user }}"
    group: "{{ group }}"
  with_items:
    - { src: "*.yml", dest: "{{ compose_folder }}"}
    - { src: "matrix/*", dest: "{{ synapse-path }}"}
    - { src: "matrix/config.json", dest: "{{ element-path }}"}
#run docker-compose up -d in the respective paths (see above and in the vars file for reference)