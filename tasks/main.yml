---
#Static Websites
#homepage
- name: Create homepage folder
  file:
    path: "{{ homepagepath }}"
    state: directory

- name: Clone homepage repository
  git:
    repo: https://{{ github_token }}@github.com/Igeljaeger/igel.jaeger.website.git
    dest: "{{ homepagepath }}"
    clone: yes
    update: yes

- name: Recursively change ownership of homepage directory
  ansible.builtin.file:
    path: "{{ homepagepath }}"
    state: directory
    recurse: yes
    owner: "{{ user }}"
    group: "{{ group }}"

#Stickers
- name: Create Stickers Data Folder
  file:
    path: "{{ stickerspath }}"
    state: directory

- name: Clone Stickerpicker repository
  git:
    repo: https://github.com/Igeljaeger/stickerpicker.git
    dest: "{{ stickerspath }}"
    clone: yes
    update: yes

- name: Recursively change ownership of a Stickers directory
  ansible.builtin.file:
    path: "{{ stickerspath }}"
    state: directory
    recurse: yes
    owner: "{{ user }}"
    group: "{{ group }}"

#Docker

- name: Clone the bibliogram repository
  git:
    repo: https://git.sr.ht/~cadence/bibliogram
    dest: "{{ bibliogrampath }}"
    clone: yes
    update: yes

- name: Clone the searx repository
  git:
    repo: https://github.com/searx/searx-docker.git
    dest: "{{ searxpath }}"
    clone: yes
    update: yes

- name: Clone the hemppa matrix bot repository
  git:
    repo: https://github.com/vranki/hemppa.git
    dest: "{{ synapsepath }}"
    clone: yes
    update: yes

- name: Install the package "docker.io"
  apt:
    name: docker.io
    state: present

- name: Install the package "docker-compose"
  apt:
    name: docker-compose
    state: present
    
- name: Install the package "nginx"
  apt:
    name: nginx
    state: present

- name: Create directories
  file:
    path: "{{ item.dest }}"
    recurse: true   
    state: directory
  loop:
    - { dest: "{{ composepath }}"}
    - { dest: "{{ navidromepath }}/music"}
    - { dest: "{{ elementpath }}"}
    - { dest: "{{ composepath }}/element/"}
    - { dest: "{{ composepath }}/hemppa/"}
    - { dest: "{{ composepath }}/jellyfin/"}
    - { dest: "{{ composepath }}/matrix/"}
    - { dest: "{{ composepath }}/navidrome/"}
    - { dest: "{{ composepath }}/nginx/"}
    - { dest: "{{ composepath }}/sync/"}

- name: Sync template folders
  synchronize:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "{{ templatespath }}bash", dest: "/home/{{ user }}/scripts" }
    - { src: "{{ templatespath }}docker", dest: "{{ composepath }}" }
    - { src: "{{ templatespath }}matrix", dest: "{{ synapsepath }}" }
    - { src: "{{ templatespath }}nginx", dest: "{{ nginxsites }}" }

- name: templates
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ user }}"
    group: "{{ group }}"
  with_items:
    - { src: "matrix/config.json", dest: "{{ elementpath }}/config.json"}
    - { src: "docker/element-compose.yml.j2", dest: "{{ composepath }}/element/docker-compose.yml"}
    - { src: "docker/hemppa-compose.yml.j2", dest: "{{ composepath }}/hemppa/docker-compose.yml"}
    - { src: "docker/jellyfin-compose.yml.j2", dest: "{{ composepath }}/jellyfin/docker-compose.yml"}
    - { src: "docker/matrix-compose.yml.j2", dest: "{{ composepath }}/matrix/docker-compose.yml"}
    - { src: "docker/navidrome-compose.yml.j2", dest: "{{ composepath }}/navidrome/docker-compose.yml"}
    - { src: "docker/nginx-compose.yml.j2", dest: "{{ composepath }}/nginx/docker-compose.yml"}
    - { src: "docker/sync-compose.yml.j2", dest: "{{ composepath }}/sync/docker-compose.yml"}

#run docker-compose up -d in the respective paths (see above and in the vars file for reference)
